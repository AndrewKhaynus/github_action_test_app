name: Dart

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    # Note that this workflow uses the latest stable version of the Dart SDK.
    # Docker images for other release channels - like dev and beta - are also
    # available. See https://hub.docker.com/r/google/dart/ for the available
    # images.

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '1.22.6'
        env:
          ALIAS: '${{ secrets.KEY_ALIAS }}'
          ALIAS_PASSWORD: '${{ secrets.KEY_ALIAS_PASSWORD }}'
          KEY_STORE_PASSWORD: '${{ secrets.KEY_STORE_PASSWORD }}'
          DOMAIN_NAME: '${{ secrets.KEY_DOMAIN_PROD }}'
          ONESIGNAL: '${{ secrets.KEY_ONESIGNAL_ID_PROD }}'
          SITE_DOMAIN: '${{ secrets.KEY_SITE_DOMAIN_PROD }}'
          SUPPORT_EMAIL: '${{ secrets.KEY_SUPPORT_EMAIL }}'
          JKS: '${{ secrets.KEY_JKS }}'

          run: echo $JKS > nur.keystore && flutter pub get && flutter test && flutter build apk --dart-define=DOMAIN=$DOMAIN_NAME --dart-define=ONE_SIGNAL_ID=$ONESIGNAL --dart-define=SITE_DOMAIN=$SITE_DOMAIN --dart-define=SUPPORT_EMAIL=$SUPPORT_EMAIL

      - uses: actions/upload-artifact@v1
        with:
          name: release-apk
          path: build/app/outputs/apk/release/app-release.apk
